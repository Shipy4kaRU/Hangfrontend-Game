{"version":3,"sources":["app.js"],"names":["QUESTION_LIST","questionText","document","querySelector","answerContainer","errorsNumber","keyboardList","characterContainer","hangParts","children","modalWindow","modalTitle","modalPraise","modalMessage","modalAnswer","_answerText","WeakMap","_errors","_createClass","App","_classPrivateFieldInitSpec","this","addEventListener","_keyboardClicked","bind","modalButton","close","key","value","_classCallCheck","_clearHang","_setNewQuestion","_classPrivateFieldGet","join","showModal","textContent","_setWin","_classPrivateFieldSet","newLetter","lettersList","_setLose","querySelectorAll","createElement","innerElement","classList","acc","push","index","lowLettersIndex","reduce","el","_setPartHang","_this$errors","uppLettersIndex","append","cloneNode","forEach","_showLetter","includes","toLowerCase","length","_setErrors","e","target","setAttribute","clickedLetter","_checkCorrectLetter","_setAnswerText","_setQuestionText","newAnswerText","answer","split","newElement","insertAdjacentElement","newQuestionText","text","questionLength","Math","round","random","keyboardLetters","i","_clearAnswerText","_clearQuestionText","_resetKeyboard","randomIndex","display","_clearErrors","firstChild"],"mappings":"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","file":"app.js","sourcesContent":["import QUESTION_LIST from \"./QUESTIONS_LIST.js\";\nconst questionText = document.querySelector(\".jsQuestion\");\nconst answerContainer = document.querySelector(\".question__list\");\nconst errorsNumber = document.querySelector(\".jsErrors\");\nconst keyboardList = document.querySelector(\".keyboard__list\");\nconst characterContainer = document.querySelector(\".character\");\nconst hangParts = characterContainer.children;\nconst modalWindow = document.querySelector(\".modal\");\nconst modalTitle = document.querySelector(\".jsTitle\");\nconst modalPraise = document.querySelector(\".jsPraise\");\nconst modalMessage = document.querySelector(\".jsMessage\");\nconst modalAnswer = document.querySelector(\".jsAnswer\");\nconst modalButton = document.querySelector(\".modal__button\");\n\nclass App {\n  #answerText = [];\n  #errors = 0;\n  constructor() {\n    this._clearHang();\n    this._setNewQuestion();\n    keyboardList.addEventListener(\"click\", this._keyboardClicked.bind(this));\n    modalButton.addEventListener(\"click\", () => {\n      this._resetApp();\n      this._setNewQuestion();\n      modalWindow.close();\n    });\n  }\n\n  _setWin() {\n    modalTitle.textContent = \"Вы выиграли!\";\n    modalPraise.textContent =\n      \"Вы оказались хорошим разработчиком! Гордитесь этим.\";\n    modalMessage.textContent = \"Все верно. Правильный ответ:\";\n    modalAnswer.textContent = this.#answerText.join(\"\");\n    modalWindow.showModal();\n  }\n\n  _setLose() {\n    modalTitle.textContent = \"Вы проиграли!\";\n    modalPraise.textContent =\n      \"Вы были близки! Не расстраивайтесь и попробуйте сыграть еще раз.\";\n    modalMessage.textContent = \"Правильный ответ был:\";\n    modalAnswer.textContent = this.#answerText.join(\"\");\n    modalWindow.showModal();\n  }\n\n  _setPartHang() {\n    hangParts[this.#errors].style.display = \"block\";\n    this.#errors++;\n  }\n\n  _showLetter(newLetter) {\n    const lettersList = answerContainer.querySelectorAll(\".question__el\");\n    const innerElement = document.createElement(\"p\");\n    innerElement.classList.add(\"question__letter\");\n    innerElement.textContent = newLetter;\n    const uppLettersIndex = this.#answerText.reduce((acc, el, index) => {\n      if (el === newLetter) acc.push(index);\n      return acc;\n    }, []);\n    const lowLettersIndex = this.#answerText.reduce((acc, el, index) => {\n      if (el === newLetter.toLowerCase()) acc.push(index);\n      return acc;\n    }, []);\n    uppLettersIndex.forEach((el) =>\n      lettersList[el].append(innerElement.cloneNode(true))\n    );\n    lowLettersIndex.forEach((el) =>\n      lettersList[el].append(innerElement.cloneNode(true))\n    );\n  }\n\n  _checkCorrectLetter(newLetter) {\n    if (\n      this.#answerText.includes(newLetter) ||\n      this.#answerText.includes(newLetter.toLowerCase())\n    ) {\n      this._showLetter(newLetter);\n      const lettersNumber =\n        document.querySelectorAll(\".question__letter\").length;\n      if (lettersNumber === this.#answerText.length) {\n        this._setWin();\n      }\n    } else {\n      this._setPartHang();\n      this._setErrors();\n      if (this.#errors === 6) this._setLose();\n    }\n  }\n\n  _keyboardClicked(e) {\n    if (!e.target.classList.contains(\"keyboard__btn\")) return;\n    e.target.closest(\".keyboard__btn\").setAttribute(\"disabled\", \"true\");\n    const clickedLetter = e.target.textContent;\n    this._checkCorrectLetter(clickedLetter);\n  }\n\n  _setNewQuestion() {\n    const index = this.chooseRandomQuestion();\n    this._setAnswerText(index);\n    this._setQuestionText(index);\n    this._setErrors();\n  }\n\n  _setErrors() {\n    errorsNumber.textContent = `${this.#errors}/6`;\n  }\n\n  _setAnswerText(index) {\n    const newAnswerText = QUESTION_LIST[index].answer;\n    this.#answerText = newAnswerText.split(\"\");\n    this.#answerText.forEach((el) => {\n      const newElement = document.createElement(\"li\");\n      newElement.classList.add(\"question__el\");\n      answerContainer.insertAdjacentElement(\"beforeend\", newElement);\n    });\n  }\n\n  _setQuestionText(index) {\n    const newQuestionText = QUESTION_LIST[index].text;\n    questionText.textContent = newQuestionText;\n  }\n\n  chooseRandomQuestion() {\n    const questionLength = QUESTION_LIST.length - 1;\n    const randomIndex = Math.round(Math.random() * questionLength);\n    return randomIndex;\n  }\n\n  _resetKeyboard() {\n    const keyboardLetters = document.querySelectorAll(\".keyboard__btn\");\n    for (let i = 0; i < keyboardLetters.length; i++) {\n      keyboardLetters[i].removeAttribute(\"disabled\");\n    }\n  }\n\n  _resetApp() {\n    this._clearAnswerText();\n    this._clearQuestionText();\n    this._clearErrors();\n    this._clearHang();\n    this._resetKeyboard();\n  }\n\n  _clearHang() {\n    for (let i = 0; i < hangParts.length; i++) {\n      hangParts[i].style.display = \"none\";\n    }\n  }\n\n  _clearErrors() {\n    this.#errors = 0;\n    this._setErrors();\n  }\n\n  _clearQuestionText() {\n    questionText.textContent = \"\";\n  }\n\n  _clearAnswerText() {\n    while (answerContainer.firstChild) {\n      answerContainer.removeChild(answerContainer.firstChild);\n    }\n  }\n}\n\nexport default App;\n"]}